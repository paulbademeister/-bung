SymbolToNumber = {'A':0, 'C':1, 'G':2, 'T':3}
NumberToSymbol = {0:'A', 1:'C', 2:'G', 3:'T'}

def Numbertopattern(index,k):
    if k == 1:
        return NumberToSymbol[index]
    prefixindex = index // 4
    r = index % 4
    prefixPattern = Numbertopattern(prefixindex, k - 1)
    return prefixPattern + NumberToSymbol[r]

def Patterntonumber(text):
    x=0
    t=0
    for i in range(len(text)):
        symbol = text[-1:]
        if symbol=='A':
            x=x+0
            t=t+1
            text=text[0:-1]
        if symbol=='C':
            x=x+1*(4**t)
            t=t+1
            text=text[0:-1]
        if symbol=='G':
            x=x+2*(4**t)
            t=t+1
            text=text[0:-1]
        if symbol=='T':
            x=x+3*(4**t)
            t=t+1
            text=text[0:-1]
    return(x)


def computingfrequencies(text,k):
    h=-1+4**k
    for i in range(0,h):
        frequencyarray=[0]*(4**k)
    for i in range(0,(len(text)-k+1)):
        pattern= text[i:i+k]
        j= int(Patterntonumber(pattern))
        w = frequencyarray[j]
        w= w+1
        frequencyarray[j]= w

    return(frequencyarray)

text=input("DNA-Strang?")
k=int(input("k?"))
frequencyarray=computingfrequencies(text,k)

frequentPatterns = []
COUNT = [0] * len(text)
maxwords= max(frequencyarray)
for i in range(0,4**k):
    if frequencyarray[i]==maxwords:
        Pattern= Numbertopattern(i,k)
        frequentPatterns.append(Pattern)



print(frequentPatterns)
